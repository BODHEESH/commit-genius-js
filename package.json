{
  "name": "bodhi-commit-genius-js",
  "version": "1.0.0",
  "description": "ğŸš€ Smart commit message generator with AI - supports local LLMs and cloud APIs",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "bin": {
    "bodhi": "./dist/cli.js"
  },
  "scripts": {
    "build": "tsc",
    "start": "node dist/cli.js",
    "dev": "ts-node src/cli.ts",
    "test": "jest",
    "lint": "eslint . --ext .ts",
    "prepare": "husky install"
  },
  "keywords": [
    "bodhi",
    "commit-genius",
    "git",
    "commit",
    "ai",
    "artificial-intelligence",
    "machine-learning",
    "conventional-commits",
    "ollama",
    "openai",
    "gpt",
    "cli",
    "automation",
    "developer-tools",
    "productivity",
    "git-automation",
    "commit-message",
    "semantic-commits",
    "version-control",
    "git-workflow",
    "code-quality",
    "code-review",
    "best-practices",
    "local-llm",
    "cloud-ai",
    "offline-mode",
    "smart-commits",
    "git-tools",
    "git-hooks",
    "commit-convention",
    "commit-lint",
    "commit-format",
    "commit-standards",
    "git-commit",
    "git-message",
    "git-history",
    "repository",
    "source-control",
    "development-workflow",
    "team-collaboration",
    "code-management",
    "typescript",
    "javascript",
    "nodejs",
    "npm-package",
    "dev-tools",
    "coding-assistant",
    "ai-powered",
    "bodhi-tools",
    "ai-assistant",
    "code-automation",
    "development-tools",
    "software-development",
    "programming",
    "coding",
    "developer-experience",
    "dx",
    "devops",
    "continuous-integration",
    "ci-cd",
    "agile",
    "scrum",
    "git-flow",
    "github",
    "gitlab",
    "bitbucket",
    "version-management",
    "code-versioning",
    "repository-management",
    "commit-history",
    "git-log",
    "git-commands",
    "git-cli",
    "command-line",
    "terminal",
    "shell",
    "bash",
    "powershell",
    "zsh",
    "development-environment",
    "ide-integration",
    "vscode",
    "visual-studio-code",
    "intellij",
    "webstorm",
    "code-editor",
    "development-workflow",
    "team-productivity",
    "collaboration-tools",
    "code-collaboration",
    "team-development",
    "project-management",
    "software-engineering",
    "engineering-tools",
    "code-organization",
    "repository-structure",
    "monorepo",
    "multi-repo",
    "git-repository",
    "branch-management",
    "merge-requests",
    "pull-requests",
    "code-changes",
    "change-tracking",
    "code-history",
    "commit-tracking",
    "semantic-versioning",
    "semver",
    "changelog",
    "release-notes",
    "documentation",
    "code-documentation",
    "api-documentation",
    "technical-documentation",
    "code-standards",
    "coding-guidelines",
    "style-guide",
    "code-consistency",
    "team-standards",
    "development-standards",
    "code-maintainability",
    "code-readability",
    "clean-code",
    "refactoring",
    "code-improvement",
    "performance-optimization",
    "code-optimization",
    "debugging",
    "testing",
    "unit-testing",
    "integration-testing",
    "test-automation",
    "quality-assurance",
    "qa",
    "code-review-tools",
    "peer-review",
    "team-review",
    "code-analysis",
    "static-analysis",
    "dynamic-analysis",
    "code-metrics",
    "code-coverage",
    "security",
    "code-security",
    "secure-development",
    "devsecops",
    "open-source",
    "oss",
    "free-software",
    "community",
    "developer-community",
    "programming-tools",
    "software-tools",
    "development-kit",
    "sdk",
    "api",
    "rest-api",
    "graphql",
    "web-development",
    "frontend",
    "backend",
    "full-stack",
    "cross-platform",
    "multi-platform",
    "windows",
    "linux",
    "macos",
    "unix",
    "cloud",
    "cloud-computing",
    "saas",
    "paas",
    "iaas",
    "microservices",
    "serverless",
    "containers",
    "docker",
    "kubernetes",
    "scalability",
    "reliability",
    "maintainability",
    "extensibility",
    "modularity",
    "reusability"
  ],
  "author": "vcbodheesh@gmail.com",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/BODHEESH/commit-genius-js.git"
  },
  "bugs": {
    "url": "https://github.com/BODHEESH/commit-genius-js/issues"
  },
  "homepage": "https://github.com/BODHEESH/commit-genius-js#readme",
  "engines": {
    "node": ">=14.0.0"
  },
  "dependencies": {
    "commander": "^11.1.0",
    "simple-git": "^3.22.0",
    "chalk": "^4.1.2",
    "inquirer": "^8.2.6",
    "openai": "^4.24.1",
    "node-fetch": "^2.7.0",
    "conf": "^10.2.0",
    "ora": "^5.4.1"
  },
  "devDependencies": {
    "@types/node": "^20.10.5",
    "@types/inquirer": "^8.2.10",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "typescript": "^5.3.3",
    "ts-node": "^10.9.2",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.11",
    "ts-jest": "^29.1.1",
    "husky": "^8.0.3",
    "eslint": "^8.56.0"
  }
}
